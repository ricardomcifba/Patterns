/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package blok.gui;

import blok.interfaces.ISimulator;
import blok.simulator.*;
import java.awt.Dimension;

/**
 *
 * @author sandroandrade
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
	
	public static MainWindow getInstance( String selectedSkin ) {
		
		if( SINGLETON == null ) {
			
			SINGLETON = new MainWindow( selectedSkin );
			
		}
		
		return SINGLETON;
		
	}
	
	
    private MainWindow( String selectedSkin ) {
    	
        initComponents();
        
        Dimension size = new Dimension(1000, 600);

        MainPanel mainPanel = MainPanel.getInstance( selectedSkin );
        mainPanel.setPreferredSize(size);
        mainPanel.setMinimumSize(size);
        mainPanel.setMaximumSize(size);
        mainPanel.setSize(size);
        setContentPane(mainPanel);

        setResizable(false);
        pack();
        
        ISimulator simulator = new JBox2DSimulator(mainPanel);
        mainPanel.setSimulator(simulator);
        simulator.init();
        simulator.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout());

        jMenu1.setText("File");
        
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenuBar1.add(jMenu2);
 
        setJMenuBar(jMenuBar1);

        pack();

    }// </editor-fold>//GEN-END:initComponents
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2; 
    private javax.swing.JMenuBar jMenuBar1;

    
    private static MainWindow SINGLETON = null;
    
    // End of variables declaration//GEN-END:variables
    
    /*
     * 
     * File currentDir = new File("./plugins");
      String []plugins = currentDir.list();
      int i;
      
      URL[] jars = new URL[plugins.length];
      
      for (i = 0; i < plugins.length; i++)
      {
		System.out.println(i+1 + " - " + plugins[i].split("\\.")[0]);
		jars[i] = (new File("./plugins/" + plugins[i])).toURL();
      }
      
      URLClassLoader ulc = new URLClassLoader(jars);
      
      System.out.println(i+1 + " - Plugin refresh");
      System.out.println("Escolha sua opção ou 0 para sair: ");
      
      Scanner sc = new Scanner(System.in);
      
      op = sc.nextInt();
      
      if (op != 0 && op != i+1)
      {
		String factoryName = plugins[op-1].split("\\.")[0];
		AbstractFactory factory = (AbstractFactory) Class.forName(factoryName.toLowerCase() + "." + factoryName, true, ulc).newInstance();
		createProducts(factory);
      }
     * 
     * */
}
